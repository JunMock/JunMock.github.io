{"componentChunkName":"component---src-templates-post-template-js","path":"/버그,오류(에러),예외,경고/","result":{"data":{"post":{"id":"6df0e171-6e72-5793-b393-183784e7121b","html":"<h2>버그, 오류(에러), 예외 그리고 경고</h2>\n<p>개발 혹은 사용중 생기는 빨간색 혹은 노란색 표시들이 많다.<br>\n이러한 표시는 예외, 오류 그리고 경고를 의미한다.<br>\n차이점과 특징에 대해서 알아보려고 한다.</p>\n<h3>버그</h3>\n<blockquote>\n<p>위키피디아 - 소프트웨어 버그</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">버그(bug)는 소프트웨어가 예상하지 못한 잘못된 결과를 내거나, 오류가 발생,착오나,오작동이 발생하는 등의 문제를 뜻한다. 버그는 프로그램의 소스코드나 설계 과정에서의 오류 때문에 발생한다.</code></pre></div>\n<p>버그는 간단히 말해 프로그래머에 의한 에러이다.</p>\n<h3>오류(에러)</h3>\n<blockquote>\n<p>표준국어대사전 - 에러</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">명사: 연산 처리 장치의 잘못된 동작이나 소프트웨어의 잘못 때문에 생기는, 계산값과 참값과의 오차</code></pre></div>\n<p>오류는 대부분 실행이 불가능할 정도로 큰 문제를 뜻한다.</p>\n<ul>\n<li>\n<p>컴파일 오류 : 컴파일 시점에서 체크할 수 있는 오류로 구문 오류등이 이때 발생한다 </p>\n<ul>\n<li>구문 오류 :  프로그래밍 언어의 문법을 지키지 않아 발생한 오류 </li>\n</ul>\n</li>\n<li>런타임 오류 : 프로그램이 실행 중 생기는 문제</li>\n<li>논리 오류 : 잘못된 처리로 원하는 결과를 얻지 못하는 것 대부분 비정상적인 종료가 되진 않음</li>\n</ul>\n<h3>예외</h3>\n<blockquote>\n<p>위키피디아 - 예외처리</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">예외 처리 또는 오류 처리는 일발적인 실행의 흐름을 바구는 몇 가지 조건을 처리하도록 설계한 프로그래밍 언어의 개념이나 컴퓨터 하드웨어 구조를 말한다.\n빌반적으로 프로그램이 처리되는 동안 특정한 문제가 일어났을 때 처리를 중단하고 다른처리를 하는 것을 예외 처리라고 한다.</code></pre></div>\n<p>예외는 실행 도중 중단될 정도로 큰 문제가 아닐 때 발생하는 것</p>\n<p>자바에서 (Un)Checked Exception</p>\n<ul>\n<li>\n<p>Checked Exception</p>\n<ul>\n<li>반드시 예외를 처리 해야함 </li>\n<li>컴파일 단계에서 확인</li>\n<li>예외 발생시 트랜잭션을 roll-back하지 않음</li>\n<li>\n<p>대표적 예외 </p>\n<ul>\n<li>IOException</li>\n<li>SQLException</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Unchecked Exception</p>\n<ul>\n<li>명시적인 처리를 하지않아도 됨</li>\n<li>프로그램 실행 단계</li>\n<li>예외 발생시 트랜잭션을 roll-back함</li>\n<li>\n<p>대표적 예외</p>\n<ul>\n<li>\n<p>RuntimeExption의 하위예외</p>\n<ul>\n<li>NullPointException</li>\n<li>IndexOutOfBoundExcetion</li>\n<li>SystemException</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3>경고</h3>\n<p>프로그램의 실행은 가능하지만 잠재적인 문제를 발생 할 수 있는 상태 </p>\n<ul>\n<li>선언한 변수등을 사용하지 않았을 경우</li>\n<li>I/O 클래스등의 사용후 close하지 않은 경우</li>\n<li>등등..</li>\n</ul>","fields":{"slug":"/버그,오류(에러),예외,경고/","prefix":"2021-05-20"},"frontmatter":{"title":"버그,오류(에러),예외,경고","author":"JunMock Kim","category":"개발지식","cover":{"childImageSharp":{"resize":{"src":"/static/062388c919eb526dd64aa14f180ca517/630fb/title.png"}}}}},"authornote":{"id":"612c5019-2e65-58fc-8f4f-00508f8a5264","html":"<p>개발자를 준비중입니다.<br>\njava kotlin Spring Vue WebRtc 를 공부하고 있습니다.</p>"},"site":{"siteMetadata":{"facebook":{"appId":"652173235373632"}}}},"pageContext":{"slug":"/버그,오류(에러),예외,경고/","next":{"id":"bc61de02-80f0-560c-baf2-64b9be1a5672","fields":{"slug":"/JPA(Java_Persistence_API)/","prefix":"2021-5-24","source":"posts"},"frontmatter":{"title":"JPA(Java Persistence API)","category":"자바API"}},"source":"posts"}}}